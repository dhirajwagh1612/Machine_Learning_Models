specan(lbh_selec_table)
specan(wave3)
specan(wave1)
specan(wave2)
specan(wave5)
View(lbh_selec_table)
View(wave5)
View(wave5)
wave5
specan1=specan(lbh_selec_table)
is_extended_selection_table(lbh_selec_table)
mrg_ext_st <- fix_extended_selection_table(X = lbh_selec_table, Y = lbh_selec_table2)
mrg_ext_st <- fix_extended_selection_table(X = lbh_selec_table, Y = lbh_selec_table)
View(seltailor_output)
mrg_ext_st <- merge(ext_st, Y, by = "sound.files")
mrg_ext_st <- merge(ext_st, Y, by = "sound.files")
fix_extended_selection_table(X = lbh_selec_table, Y = wave1)
fix_extended_selection_table(X = lbh_selec_table, Y = 0)
fix_extended_selection_table(X = lbh_selec_table2, Y = lbh_selec_table)
View(seltailor_output)
fix_extended_selection_table(X = lbh_selec_table2, Y = seltailor_output)
data("lbh_selec_table")
data()
data
lbh_selec_table
class(st)
class(lbh_selec_table)
ext_st <- selection_table(X = lbh_selec_table, pb = FALSE,
extended = TRUE, confirm.extended = FALSE)
ext_st <- selection_table(X = lbh_selec_table, pb = FALSE,
extended = TRUE, confirm.extended = FALSE)
ext_st <- selection_table(X = lbh_selec_table, pb = FALSE,
extended = TRUE, confirm.extended = FALSE)
ext_st <- selection_table(X = lbh_selec_table, pb = FALSE,
extended = TRUE, confirm.extended = TRUE)
ext_st <- selection_table(X = lbh_selec_table, pb = FALSE,
extended = FALSE, confirm.extended = FALSE)
ext_st <- selection_table(X = lbh_selec_table, pb = TRUE,
extended = TRUE, confirm.extended = FALSE)
ext_st = selection_table(X = lbh_selec_table, pb = FALSE,
extended = TRUE, confirm.extended = FALSE)
View(lbh_selec_table)
st <- selection_table(X = lbh_selec_table, pb = FALSE)
st = selection_table(X = lbh_selec_table, pb = TRUE)
spectro(wv1, wl = 150, grid = FALSE, scale = FALSE, ovlp = 90)
wave1
spectro(wave1, wl = 150, grid = FALSE, scale = FALSE, ovlp = 90)
spectro(lbh_selec_table, wl = 150, grid = FALSE, scale = FALSE, ovlp = 90)
dtw.dist <- dfDTW(wave1, img = FALSE)
dtw.dist <- dfDTW(lbh_selec_table, img = FALSE)
dtw.dist <- dfDTW(table, img = FALSE)
View(filter_wave1)
View(lbh_selec_table)
View(wave)
View(wave1)
write.csv("lbh_selec_table",file = "F:\\speech marketers pvt. ltd\\gender identification\\12-09-2020\\", sep=",")
write.csv(lbh_selec_table,file = "F:\\speech marketers pvt. ltd\\gender identification\\12-09-2020\\", sep=",")
write.csv(lbh_selec_table,file = "F:\\speech marketers pvt. ltd\\gender identification\\12-09-2020\\", sep=",")
write.table(lbh_selec_table,file = "lbh_selec_table", sep=",")
write.table(filter_wave1,file = "filter_wave1.csv", sep=",")
View(lbh_selec_table)
write.table(lbh_selec_table2,file = "lbh_selec_table2.csv", sep=",")
write.table(new_function_names,file = "new_function_names.csv", sep=",")
write.table(seltailor_output,file = "seltailor_output.csv", sep=",")
write.table(table,file = "table.csv", sep=",")
write.table(wave,file = "wave.csv", sep=",")
write.table(wave1,file = "wave1.csv", sep=",")
write.table(wave1,file = "wave1.csv", sep=",")
write.table(wave2,file = "wave2.csv", sep=",")
write.table(wave3,file = "wave3.csv", sep=",")
write.table(wave4,file = "wave4.csv", sep=",")
write.table(wave5,file = "wave5.csv", sep=",")
View(seltailor_output)
View(seltailor_output)
library(seewave)
library(warbleR)
wave=readWave("H_chaman-1iN2M0sw68P8uLoqxu4SwOtaHOs1-1589857472925.wav")
wave
selection_table()
wave
selection_table(wave)
wave1=autodetec(redo = TRUE)
View(wave1)
autodetect=autodetec(redo = TRUE)
View(autodetect)
autodetect=autodetec(redo = TRUE)
data()
data
autodetect=autodetec(redo = TRUE)
lbh_selec_table
st <- selection_table(X = lbh_selec_table, pb = FALSE)
warbleR_options(wav.path = tempdir())
st <- selection_table(X = lbh_selec_table, pb = FALSE)
data(list = c("Phae.long1", "Phae.long2", "Phae.long3", "Phae.long4"))
writeWave(Phae.long1, file.path(tempdir(), "Phae.long1.wav"))
writeWave(Phae.long2, file.path(tempdir(), "Phae.long2.wav"))
writeWave(Phae.long3, file.path(tempdir(), "Phae.long3.wav"))
writeWave(Phae.long4, file.path(tempdir(), "Phae.long4.wav"))
warbleR_options(wav.path = tempdir())
st <- selection_table(X = lbh_selec_table, pb = FALSE)
st
class(st)
warbleR_options(wav.path = "PONER RUTA A 'ejemplos' AQUI")
ext_st <- selection_table(X = lbh_selec_table, pb = FALSE,
extended = TRUE, confirm.extended = FALSE)
is_extended_selection_table(ext_st)
ext_st2 <- ext_st[1:2, ]
is_extended_selection_table(ext_st2)
print(ext_st)
ext_st
ext_st3 <- ext_st[1:5, ]
ext_st4 <- ext_st[6:11, ]
ext_st5 <- rbind(ext_st3, ext_st4)
ext_st5
all.equal(ext_st, ext_st5)
wv1 <- read_wave(X = ext_st, index = 3, from = 0, to = 0.37)
class(wv1)
wv1
spectro(wv1, wl = 150, grid = FALSE, scale = FALSE, ovlp = 90)
Y <- data.frame(sound.files = ext_st$sound.files, site = "La Selva", lek = c(rep("SUR", 5), rep("CCL", 6)))
mrg_ext_st <- merge(ext_st, Y, by = "sound.files")
is_extended_selection_table(mrg_ext_st)
mrg_ext_st <- fix_extended_selection_table(X = mrg_ext_st, Y = ext_st)
is_extended_selection_table(mrg_ext_st)
sp <- specan(ext_st)
sp
View(new_function_names)
write.table()
View(new_function_names)
View(sp)
write.table(sp,file = "specan_executable.csv", sep=",")
writeWave(Phae.long4, file.path(tempdir(), "Phae.long4.wav"))
warbleR_options(wav.path = tempdir())
st
ext_st <- selection_table(X = lbh_selec_table, pb = FALSE,
extended = TRUE, confirm.extended = FALSE)
is_extended_selection_table(ext_st)
is_extended_selection_table(ext_st2)
ext_st2
ext_st3 <- ext_st[1:5, ]
sp
View(sp)
selection_table(checking)
library(warbleR)
library(seewave)
library(tuneR)
library(NatureSounds)
library(knitr)
readWave("F:\\speech marketers pvt. ltd\\audio_with_noise recorded wav file.wav")
new_function_names
library(warbleR)
library(seewave)
library(tuneR)
library(NatureSounds)
library(knitr)
wave2=readWave("F:\\speech marketers pvt. ltd\\audio_with_noise recorded wav file.wav")
wave2
autodet=autodetec(wave2)
autodet=autodetec(wave2, redo = TRUE)
autodet=autodetec(redo = TRUE)
autodett
autodet
checksels(autodet)
dfDTW()
check= checksels(autodet)
dfDTW(check)
View(wave2)
View(check)
frange(check, wl = 512, it = "jpeg", line = TRUE, fsmooth = 0.1, threshold = 10,
dB.threshold = NULL, wn = "hanning", flim = c(0, 22), bp = NULL,
propwidth = FALSE, xl = 1, picsize = 1, res = 100, fast.spec = FALSE, ovlp = 50,
pal = reverse.gray.colors.2, parallel = 1, widths = c(2, 1), main = NULL,
img = TRUE, mar = 0.05, path = NULL, pb = TRUE, impute = FALSE)
frange(check, wl = 512, it = "jpeg", line = TRUE, fsmooth = 0.1, threshold = 10,
dB.threshold = NULL, wn = "hanning", flim = c(0, 22), bp = NULL,
propwidth = FALSE, xl = 1, picsize = 1, res = 100, fast.spec = FALSE, ovlp = 50,
pal = reverse.gray.colors.2, parallel = 1, widths = c(2, 1), main = NULL,
img = FALSE, mar = 0.05, path = NULL, pb = TRUE, impute = FALSE)
frange(check, wl = 512, it = "jpeg", line = TRUE, fsmooth = 0.1, threshold = 10,
dB.threshold = NULL, wn = "hanning", flim = c(0, 22), bp = NULL,
propwidth = FALSE, xl = 1, picsize = 1, res = 100, fast.spec = FALSE, ovlp = 50,
pal = reverse.gray.colors.2, parallel = 1, widths = c(2, 1), main = NULL,
img = TRUE, mar = 0.05, path = NULL, pb = TRUE, impute = FALSE)
frange(autodet, wl = 512, it = "jpeg", line = TRUE, fsmooth = 0.1, threshold = 10,
dB.threshold = NULL, wn = "hanning", flim = c(0, 22), bp = NULL,
propwidth = FALSE, xl = 1, picsize = 1, res = 100, fast.spec = FALSE, ovlp = 50,
pal = reverse.gray.colors.2, parallel = 1, widths = c(2, 1), main = NULL,
img = TRUE, mar = 0.05, path = NULL, pb = TRUE, impute = FALSE)
frange(autodet)
frange(autodet, wl = 512, it = "jpeg", line = TRUE, fsmooth = 0.1, threshold = 10,
dB.threshold = NULL, wn = "hanning", flim = c(0, 22), bp = NULL,
propwidth = FALSE, xl = 1, picsize = 1, res = 100, fast.spec = FALSE, ovlp = 50,
pal = reverse.gray.colors.2, parallel = 1, widths = c(2, 1), main = NULL,
img = TRUE, mar = 0.05, path = NULL, pb = TRUE, impute = TRUE)
img = TRUE, mar = 0.05, path = NULL, pb = TRUE, impute = TRUE)
frange(autodet, wl = 512, it = "jpeg", line = TRUE, fsmooth = 0.1, threshold = 10,
dB.threshold = NULL, wn = "hanning", flim = c(0, 22), bp = NULL,
propwidth = FALSE, xl = 1, picsize = 1, res = 100, fast.spec = FALSE, ovlp = 50,
pal = reverse.gray.colors.2, parallel = 1, widths = c(2, 1), main = NULL,
img = FALSE, mar = 0.05, path = NULL, pb = TRUE, impute = TRUE)
frange(wave2, wl = 512, it = "jpeg", line = TRUE, fsmooth = 0.1, threshold = 10,
dB.threshold = NULL, wn = "hanning", flim = c(0, 22), bp = NULL,
propwidth = FALSE, xl = 1, picsize = 1, res = 100, fast.spec = FALSE, ovlp = 50,
pal = reverse.gray.colors.2, parallel = 1, widths = c(2, 1), main = NULL,
img = FALSE, mar = 0.05, path = NULL, pb = TRUE, impute = TRUE)
View(wave2)
View(autodet)
autodet
frange(autodet, wl = 512, it = "jpeg", line = TRUE, fsmooth = 0.1, threshold = 10,
dB.threshold = NULL, wn = "hanning", flim = c(0, 22), bp = NULL,
propwidth = FALSE, xl = 1, picsize = 1, res = 100, fast.spec = FALSE, ovlp = 50,
pal = reverse.gray.colors.2, parallel = 1, widths = c(2, 1), main = NULL,
img = FALSE, mar = 0.05, path = NULL, pb = TRUE, impute = TRUE)
data.matrix()
data.matrix(1,2,3 4,5,6 7,8,9)
data.matrix(2,3)
data.matrix(3,3)
x=data.frame(foo=1:4, bar)
x=data.frame(foo=1:4)
x
names(x)
x=1:3
x
x=1:3,2:3,3:3
x=1:3, 2:3, 3:3
x=1:3
x
dimnames(m)=list("a","b","c")
read.csv("specan_executable.csv")
comment.char
comment.char()
read.table()
read.table("H_chaman-1iN2M0sw68P8uLoqxu4SwOtaHOs1-1589857472925.wav")
read.table("specan_executable.csv")
dump()
dump(st)
dump(autodet)
str(file)
dump(file)
dump(file())
dump(file(description = 0))
data = read.csv(autodec)
con = url(www.digitalbusinessguru.in)
url(www.digitalbusinessguru.in)
x=list(getwd())
x
x
print(x)
x=C(1,2,NA,4,5,NA)
x <- c(1,2,NA,4,5,NA)\
x <- c(1,2,NA,4,5,NA)
bad<-is.na(x)
x
bad
good<-complete.cases(x)
good
x(good)
good(x)
x<- matrix(1:4, 2, 2); y<-matrix(resp(10,4),2,2)
x<- matrix(1:4, 2, 2) y<-matrix(resp(10,4),2,2)
x<- matrix(1:4, 2, 2)y<-matrix(resp(10,4),2,2)
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
1
1
1
1
1
1
1
5+7
x<-5+7
x
x-3
y<-x-3
y
c(1.1,9,3.14)
z<-c(1.1,9,3.14)
z<-c(1.1,9,3.14)
?c
z
z,555
z=c("z",555)
z<-c("z",555)
c
c
c("z",555)
type info()
c(z, 555, z)
z*2+100
my_sqrt(z-1)
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-(z/my_sqrt)
my_div<-z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
c(1,2,3,4) + c(0,10,100)
z*2+100
z*2+100
c(1,2,3,4) + c(0,10,100)
corrected
corrected
z*2+1000
my_div
swirl()
library(swirl)
swirl()
list.files(help())
list.files
list
list.files(0)
list.files()
info()
info()
info
info()
help()
swirl()
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists(mytest.R)
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2","mytest3")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
setwd(old.dir)
1:20
pi:20
pi:10
15:1
?':'
seq(1,20)
seq(from = 1, to = 20)
seq(from = 1, to = 20)
seq(0, 10, by = 0.5)
seq(0, 10, by = 0.1)
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
swirl()
1
swirl()
1:20
x <- 1:20
x
is.vector(x)
swirl()
num_vect(0.5,55,-10,6)
num_vect<-[0.5,55,-10,6]
num_vect<-c[0.5,55,-10,6]
num_vect<-c(0.5,55,-10,6)
tf<-num_vect<1
tf
num_vect>=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Swirl")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y<-rnorm(1000)
z<-rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
1
swirl()
2
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect[c("foo", "bar")]
vect["2"]
vect[c("foo", "bar")]
vect["2"]
vect[2]
vect[“bar”]
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow=4, ncol=5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
ls()
swirl()
TRUE=TRUE
TRUE==TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
10 <= 10
5 != 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
mean(c(2, 4, 5))
mean(c(2, 4, 5))
mean(c(2, 4, 5, NA))
Sys.Date()
mean(c(2, 5, 5))
mean(c(2, 4, 5))
submit()
submit()
boring_function('my first function!')
boring_function('My first function!')
mean(c(2, 4, 5, NA), na.rm = TRUE)
swirl()
submit(x)
submit()
swirl()
Sys.Date()
mean(c(2, 4, 5))
mean(c(2, 4, 5, NA))
do.something()
ls
data()
as.matrix()
as
det(a)
x=(9,2,10 10,20,30 40,50,60)
x=(9 2 10 10, 20 30, 40 50 60)
x=(9 2 10, 20 30 40, 40 50 60)
y=x=(9 2 10, 20 30 40, 40 50 60)
int[1:9]
y=int[1:9]
y=[1:9]
install.packages(warbleR)
setwd('F:/Projects/Machine Learning/ML/Machine_Learning_Models/Regression/Support Vector Regression')
